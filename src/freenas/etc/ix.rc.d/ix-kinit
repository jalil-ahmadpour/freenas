#!/bin/sh
#
# $FreeBSD$
#

# PROVIDE: ix-kinit
# REQUIRE: kerberos
# REQUIRE: ix-pre-samba
# REQUIRE: ntpd

. /etc/rc.freenas

kerberos_start()
{
	local res=1
	local pwfile
	local timeout=60

	if dirsrv_enabled activedirectory
	then
		AD_init

		local bindname="$(AD_get ad_bindname)"
		local bindpw="$(AD_get ad_bindpw)"
		local domainname="$(AD_get ad_domainname)"
		local use_keytab=$(AD_get ad_use_keytab)
		local keytab="$(AD_get ad_keytab)"

		if [ "${use_keytab}" = "1" -a -f "${keytab}" ]
		then
			local res=0
			local principals

			domainname="$(echo "${domainname}" | tr a-z A-Z)"

			principals="$(/usr/sbin/ktutil -k "${keytab}" list|tail +4|awk '{ print $3 }')"
			for p in ${principals}
			do
				AD_log "kerberos_start: /usr/bin/kinit --renewable -t ${keytab} -k ${p}"
				/usr/bin/kinit -t "${keytab}" --renewable -k "${p}"
				if [ "$?" != "0" ]
				then
					res=1
					break
				fi
				res=0
			done

			local ok="Failed"
			if [ "${res}" = "0" ]
			then
				ok="Successful"
			fi

			AD_log "kerberos_start: ${ok}"
			rm -f "${pwfile}"

			i=0
			timeout="$(AD_get ad_timeout)"
			while [ "${i}" -lt "${timeout}" ]
			do
				/usr/bin/klist -t
				if [ "$?" = "0" ]
				then
					break
				fi

				sleep 1
				: $(( i += 1 ))
			done

		elif [ -n "${bindname}" -a -n "${domainname}" -a -n "${bindpw}" ]
		then
			domainname="$(echo "${domainname}" | tr a-z A-Z)"

			pwfile="$(mktemp /tmp/tmp.XXXXXXXX)"
			echo -n "${bindpw}" > ${pwfile}

			AD_log "kerberos_start: /usr/bin/kinit --renewable " \
				"--password-file=${pwfile} ${bindname}@${domainname}"
			__AD_tc ${timeout} /usr/bin/kinit --renewable \
				--password-file="${pwfile}" "${bindname}@${domainname}"
			res=$?

			local ok="Failed"
			if [ "${res}" = "0" ]
			then
				ok="Successful"
			fi

			AD_log "kerberos_start: ${ok}"
			rm -f "${pwfile}"

			i=0
			timeout="$(AD_get ad_timeout)"
			while [ "${i}" -lt "${timeout}" ]
			do
				/usr/bin/klist -t
				if [ "$?" = "0" ]
				then
					break
				fi

				sleep 1
				: $(( i += 1 ))
			done
		fi
	fi

	return ${res}
}

kerberos_status()
{
	local res=1

	if dirsrv_enabled activedirectory
	then
		AD_init

		local domainname=$(AD_get ad_domainname)
		local bindname=$(AD_get ad_bindname)
		local bindpw=$(AD_get ad_bindpw)

		if [ -n "${bindname}" -a -n "${domainname}" -a -n "${bindpw}" ]
		then
			domainname=$(echo "${domainname}"|tr a-z A-Z)

			AD_log "kerberos_status: klist -t"
			/usr/bin/klist -t
			res=$?

			local ok="Failed"
			if [ "${res}" = "0" ]
			then
				ok="Successful"
			fi

			AD_log "kerberos_status: ${ok}"
		fi
	fi

	return ${res}
}

kerberos_stop()
{
	/usr/bin/kdestroy
}

kerberos_renew()
{
	if ! dirsrv_enabled activedirectory
	then
		return
	fi

	local klist_out="$(/usr/bin/mktemp /tmp/XXXXXX)"

	/usr/bin/klist -v > "${klist_out}"

	local krbtgt_ticket=false
	local auth_time=
	local end_time=
	local renew_until=
	local cur_time=

	local time_regex='[a-zA-Z]{3,4} +[0-9]{1,2} +[0-9]{2}:[0-9]{2}:[0-9]{2} +[0-9]{4}'

	exec 3<& 0
	exec 0< "${klist_out}"
	while read line
	do
		if [ -z "${line}" ]; then continue; fi

		if echo "${line}"|egrep -q '^Server: +' &&
			echo "${line}"|egrep -q '^Server: +krbtgt\/.+'
		then
			krbtgt_ticket=true
		elif echo "${line}"|egrep -q '^Server: +' &&
			! echo "${line}"|egrep -iq '^Server: +krbtgt\/.+'
		then
			krbtgt_ticket=false
		fi

		if ${krbtgt_ticket} && echo "${line}"|egrep -iq '^Auth time: +'
		then
			strtime="$(echo "${line}"|sed -E 's|^(Auth time: +)||I')"
			strtime="$(echo "${strtime}"|sed -E 's|^(${time_regex})|\1|')"
			if [ -z "${strtime}" ]; then continue; fi

			auth_time="$(date -j -f '%b %d %H:%M:%S %Y' \
				"${strtime}" '+%s' 2>/dev/null)"

		elif ${krbtgt_ticket} && echo "${line}"|egrep -iq '^End time: +'
		then
			strtime="$(echo "${line}"|sed -E 's|^(End time: +)||I')"
			strtime="$(echo "${strtime}"|sed -E 's|^(${time_regex})|\1|')"
			if [ -z "${strtime}" ]; then continue; fi

			end_time="$(date -j -f '%b %d %H:%M:%S %Y' \
				"${strtime}" '+%s' 2>/dev/null)"

		elif ${krbtgt_ticket} && echo "${line}"|egrep -iq '^Renew till: +'
		then
			strtime="$(echo "${line}"|sed -E 's|^(Renew till: +)||I')"
			strtime="$(echo "${strtime}"|sed -E 's|^(${time_regex})|\1|')"
			if [ -z "${strtime}" ]; then continue; fi

			renew_until="$(date -j -f '%b %d %H:%M:%S %Y' \
				"${strtime}" '+%s' 2>/dev/null)"
		fi

		if [ -n "${auth_time}" -a -n "${end_time}" -a -n "${renew_until}" ]
		then
			break
		fi
	done
	exec 0<& 3
	rm -f "${klist_out}"

	if [ -z "${auth_time}" -o -z "${end_time}" -o -z "${renew_until}" ]
	then
		kerberos_start
		return $?
	fi

	local cur_time="$(date -j -f '%b %d %H:%M:%S %Y' \
		"$(date -j '+%b %d %H:%M:%S %Y')" '+%s' 2>/dev/null)"

	#
	# 5 minute fudge factor
	#
	: $(( cur_time +=  300 ))
	if [ "${cur_time}" -lt "${end_time}" -a "${cur_time}" -lt "${renew_until}" ]
	then
		/usr/bin/kinit -R
	else
		kerberos_start
	fi
}

name="ix-kinit"
start_cmd='kerberos_start'
status_cmd='kerberos_status'
stop_cmd='kerberos_stop'
renew_cmd="kerberos_renew"
extra_commands="renew"

load_rc_config $name
run_rc_command "$1"
