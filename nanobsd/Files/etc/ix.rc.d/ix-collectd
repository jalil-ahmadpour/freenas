#!/bin/sh
#
# $FreeBSD$
#

# PROVIDE: ix-collectd
# REQUIRE: var
# BEFORE: collectd

. /etc/rc.freenas


use_rrd_dataset()
{
	local use

	if ! is_freenas
	then
		return 1
	fi

	if [ -z "$(get_rrd_dataset)" ]
	then
		return 1
	fi

	use="$(${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "
	SELECT
		sys_rrd_usedataset
	FROM
		system_systemdataset
	ORDER BY
		-id
	LIMIT 1
	" | \
	while read -r rrd_usedataset
	do
		if [ "${rrd_usedataset}" = "0" ]
		then
			echo "1"
		else
			echo "0"
		fi
	done
	)"

	return ${use}
}


get_rrd_dataset()
{
	if [ -L "${FREENAS_SYSTEMDATASET}" -a -e "${FREENAS_SYSTEMDATASET}" ]
	then
		echo "$(realpath ${FREENAS_SYSTEMDATASET}/rrd)"
	fi
}

generate_collectd()
{
    local datadir
    local rrdmnt

    # If there is a failover table remove the rc.conf cache
    # rc.conf.local will run again using the correct collectd_enable
    # See #5019
    local failover="$(${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "select count(*) from system_failover" 2> /dev/null)"
    if [ -n "${failover}" ] && [ ${failover} -gt 0 ]; then
	rm ${FREENAS_CONFIG_MD5}
    fi

    rrdfile="/data/rrd_dir.tar.bz2"
    basedir="/var/db/collectd"
    datadir="/var/db/collectd/rrd"
    rrdmnt="$(get_rrd_dataset)"

    if use_rrd_dataset && [ -d "${rrdmnt}" ]; then
	if [ -d "${datadir}" -a ! -L "${datadir}" ]; then
		mv "${datadir}" "${datadir}.$(date +'%Y%m%d%H%M%S')"
	fi
	ln -s "${rrdmnt}" "${datadir}"
        basedir="$(realpath ${FREENAS_SYSTEMDATASET})"
        datadir="${rrdmnt}"
    else
        if [ -L "${datadir}" ]; then
	    rm -f "${datadir}"
	    mkdir -p "${datadir}"
	fi
    fi

    if [ -f "${rrdfile}" ]; then
        if use_rrd_dataset && [ -d "${rrdmnt}" ]; then
            if tar -tf "${rrdfile}"|egrep -q '^collectd/rrd/$'; then
                cd "${rrdmnt}"
                tar -jxf "${rrdfile}"
                mv collectd/rrd/* "${rrdmnt}/"
                mv "${rrdfile}" "${rrdmnt}/"
                rm -rf collectd
            fi
        elif [ -d "/var/db" -a ! -d "${datadir}" ]; then
            (cd /var/db && tar jxf "${rrdfile}")
        fi
    fi

    cfg="/usr/local/etc/collectd.conf"
    cat << EOF > $cfg
Hostname "localhost"
FQDNLookup true
BaseDir "${basedir}"
PIDFile "/var/run/collectd.pid"
PluginDir "/usr/local/lib/collectd"

LoadPlugin aggregation
LoadPlugin cpu
LoadPlugin df
LoadPlugin disk
LoadPlugin interface
LoadPlugin load
LoadPlugin memory
LoadPlugin network
LoadPlugin processes
LoadPlugin rrdtool
LoadPlugin swap
LoadPlugin uptime

<Plugin "aggregation">
    <Aggregation>
        Plugin "cpu"
        Type "cpu"
        GroupBy "Host"
        GroupBy "TypeInstance"
        CalculateSum true
    </Aggregation>
</Plugin>

<Plugin "interface">
    Interface "lo0"
    Interface "plip0"
    Interface "/^usbus/"
    IgnoreSelected true
</Plugin>

<Plugin "disk">
    Disk "/^gptid/"
    Disk "/^md/"
    Disk "/^pass/"
    IgnoreSelected true
</Plugin>

<Plugin "rrdtool">
    DataDir "${datadir}"
    CacheTimeout 120
    CacheFlush 900
</Plugin>

<Plugin "df">
EOF

    ${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT mp_path FROM storage_mountpoint m LEFT JOIN storage_volume v ON m.mp_volume_id=v.id WHERE m.mp_path LIKE '/%' AND v.vol_fstype != 'ZFS'" | sed -e 's,^,    Mountpoint ",g' -e 's,$,",g' >> ${cfg}
    for fs in `zfs list -t filesystem -o mountpoint -H`; do
        echo "    Mountpoint \"${fs}\"" >> ${cfg}
    done
echo '    IgnoreSelected false' >> ${cfg}
echo '</Plugin>' >> ${cfg}
}



name="ix-collectd"
start_cmd='generate_collectd'
stop_cmd=':'

load_rc_config $name
run_rc_command "$1"
